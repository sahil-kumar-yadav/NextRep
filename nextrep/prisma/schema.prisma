generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  TRAINER
  CLIENT
}

// User of the app (e.g., a trainer)
model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  name      String?
  email     String?

  clients   Client[] // one-to-many
  createdAt DateTime @default(now())
}

// A client of a trainer (User)
model Client {
  id        String   @id @default(cuid())
  userId    String
  name      String
  goals     String?
  notes     String?

  user      User     @relation(fields: [userId], references: [id])
  plans     Plan[]
  photos    Photo[]
  progress  ProgressEntry[]

  createdAt DateTime @default(now())
}

// Workout or meal plan for a client
model Plan {
  id        String   @id @default(cuid())
  type      String   // Consider changing to enum if fixed values: "workout", "meal"
  title     String
  description String
  content   String
  clientId  String

  client    Client   @relation(fields: [clientId], references: [id])
  createdAt DateTime @default(now())
}

// Progress tracking entry
model ProgressEntry {
  id        String   @id @default(cuid())
  clientId  String
  weight    Float?
  bodyFat   Float?
  notes     String?
  date      DateTime @default(now())

  client    Client   @relation(fields: [clientId], references: [id])
  createdAt DateTime @default(now())
}

// Client photos (e.g., progress pictures)
model Photo {
  id        String   @id @default(cuid())
  clientId  String
  url       String

  client    Client   @relation(fields: [clientId], references: [id])
  createdAt DateTime @default(now())
}


model Progress {
  id        String   @id @default(cuid())
  date      DateTime @default(now())
  weight    Float
  photoUrl  String?
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id])
}
